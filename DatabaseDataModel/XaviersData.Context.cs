//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseDataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class XaviersEntities : DbContext
    {
        public XaviersEntities()
            : base("name=XaviersEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Expense> Expenses { get; set; }
        public virtual DbSet<Income> Incomes { get; set; }
        public virtual DbSet<IncomeExpenseGroup> IncomeExpenseGroups { get; set; }
        public virtual DbSet<Qualification> Qualifications { get; set; }
        public virtual DbSet<Tax> Taxes { get; set; }
        public virtual DbSet<TaxCollection> TaxCollections { get; set; }
        public virtual DbSet<TaxExcludedMember> TaxExcludedMembers { get; set; }
        public virtual DbSet<tblColumn> tblColumns { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<WorkExperience> WorkExperiences { get; set; }
        public virtual DbSet<RecurringTax> RecurringTaxes { get; set; }
        public virtual DbSet<RecurringTaxCollection> RecurringTaxCollections { get; set; }
        public virtual DbSet<AccountBalance> AccountBalances { get; set; }
        public virtual DbSet<SmallSavingsCollection> SmallSavingsCollections { get; set; }
        public virtual DbSet<SmallSavingsSettlement> SmallSavingsSettlements { get; set; }
        public virtual DbSet<Loan> Loans { get; set; }
        public virtual DbSet<LoanCollection> LoanCollections { get; set; }
        public virtual DbSet<MailContact> MailContacts { get; set; }
        public virtual DbSet<MailGroup> MailGroups { get; set; }
    
        public virtual int UpdateContactName(Nullable<int> contactId, Nullable<int> customerId, string contactName)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateContactName", contactIdParameter, customerIdParameter, contactNameParameter);
        }
    }
}
